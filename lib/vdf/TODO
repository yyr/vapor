
WASP
----

# git-test vapor_3_0
#
#

Support for masks

done - Parallel transforms

Support Min/Max & clamp in decompression

done - GetVara support non-block-aligned coords 

serialize (order) threaded I/O

Should 'unlimited' dimensions be supported ?

***If (cratios.size() == 1 and cratios[0] == 1) do not transform
variable, but still block it. This facilitates use of coordinate variables
that are not compressed with data variables that are.

VDCNetCDF
--------

Refinement level should be supported for uncompressed variables to
handle uncompressed coordinate variables.  Reading a coordinate
variable (that was not compressed) should do the appropriate averaging
based on the wavelet (symatric vs asymetric)

VDC
---

***Data variables and their coordinate variables need to have the same 
blocking. Otherwise Can't construct elevation grid. 

Should the number of time dimensions be restricted to one? Either
way needs to be tested

Not sure what Uniform coordinate variables are actually doing. Their
uniformness is not guaranteed (can be written to), 

Consider moving VDC::GetNumTimeSteps() to VarBase (or doing away with it
entirely - it's redundant).

Support block access - read blocks without unblocking

DataMgr
-------

Handle derived variable coordinates

error checking

convert all global time steps to local

level and lod both need consisten speciefication (-1, -2, -3)
